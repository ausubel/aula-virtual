version: '3.1'
services:
  mysql:
    container_name: ${APP_NAME}_mysql_${APP_ENV}
    image: mysql:8.4
    environment:
      MYSQL_USER: ${DB_BACKEND_ACCESS_USERNAME}
      MYSQL_PASSWORD: ${DB_BACKEND_ACCESS_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      LANG: 'en_US.UTF-8'
      TZ: America/Lima
    ports:
      - ${MYSQL_PUBLIC_PORT}:3306
    volumes:
      - ./database/mysql_data_${APP_ENV}:/var/lib/mysql
      - ./database/scripts:/docker-entrypoint-initdb.d

  backend:
    container_name: ${APP_NAME}_backend_${APP_ENV}
    build:
      context: ./backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      DB_BASE_NAME: ${DB_BASE_NAME}
      DB_BACKEND_ACCESS_USERNAME: ${DB_BACKEND_ACCESS_USERNAME}
      DB_BACKEND_ACCESS_PASSWORD: ${DB_BACKEND_ACCESS_PASSWORD}
      DB_BACKEND_CONN_LIMIT: ${DB_BACKEND_CONN_LIMIT}
      APP_ENV: ${APP_ENV}
    volumes:
      - ./backend:/app
      - ./scripts/common:/scripts/common
    profiles:
      - prod
    depends_on:
      - mysql

  # nginx:
  #   image: nginx:1.27.3-alpine-slim
  #   container_name: post_a_one_nginx_${APP_ENV}
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/output/conf.d:/etc/nginx/conf.d
  #     - ./frontend/dist:/app/frontend
  #     - ./initializer/entrypoint.sh:/entrypoint.sh
  #   depends_on:
  #     - initializer
  #     - backend
  #   profiles:
  #     - prod
  #   entrypoint: ["/entrypoint.sh"]